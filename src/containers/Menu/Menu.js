import React, { Component } from 'react';
import { Link } from 'react-router-dom';
import styles from './Menu.module.css';

import Slide from 'react-reveal/Slide';
import Fade from 'react-reveal/Fade';

import logo from "../../images/CVE_logo_shadow.svg";
import closeIcon from '../../images/close.svg';
import linkImg1 from '../../images/fish.png';
import linkImg2 from "../../images/customers.jpg";
import linkImg3 from "../../images/impact.jpg";
import linkImg4 from "../../images/solution.jpg";

export default class Menu extends Component {
  state = {
    openMenu: false,
    navlinks: [
      { linkText: "Our clean technology", url: "/technology", image: linkImg1 },
      { linkText: "Our wholesome products", url: "/customers", image: linkImg2 },
      { linkText: "Our positive impact", url: "/impact", image: linkImg3 },
      { linkText: "Our local and global solution", url: "/solution", image: linkImg4 },
      { linkText: "About us", url: "/solution", image: "" },
      { linkText: "Store", url: "", image: "" },
      { linkText: "Contact us", url: "/contact", image: "" },
    ]
  }

  handleMenu = () => {
    this.setState(prevState => {
      return { openMenu: !prevState.openMenu }
    })
  }

  handleLinkImg = index => {
    const linkImgBox = this.refs.linkImgBox;
    linkImgBox.style.backgroundImage = `url(${this.state.navlinks[index]['image']})`;
    linkImgBox.classList.add(styles.slideLeft);
  }

  handleRemoveLinkImg = () => {
    const linkImgBox = this.refs.linkImgBox;
    linkImgBox.classList.remove(styles.slideLeft);
  }

  render() {

    if (this.state.openMenu === false) {
      return (
        <div className={styles.menuIcon} onClick={this.handleMenu}>
          <span style={{ color: this.props.strokeColor ? this.props.strokeColor : '#fff',
            borderBottom: `2px solid ${this.props.strokeColor ? this.props.strokeColor : '#fff'}`
          }}>menu</span>
          {/* <svg width="75" height="32" viewBox="0 0 75 32">
            <defs>
              <clipPath id="clip-path">
                <rect width="75" height="32" fill="none" />
              </clipPath>
            </defs>
            <g id="Component" clipPath="url(#clip-path)">
              <line id="Line_1" data-name="Line 1" x2="48" transform="translate(9 2.5)" fill="none" stroke={this.props.strokeColor ? this.props.strokeColor : '#fff'} strokeWidth="5" />
              <line id="Line_2" data-name="Line 2" x2="75" transform="translate(0 15.5)" fill="none" stroke={this.props.strokeColor ? this.props.strokeColor : '#fff'} strokeWidth="8" />
              <line id="Line_3" data-name="Line 3" x2="48" transform="translate(19 28.5)" fill="none" stroke={this.props.strokeColor ? this.props.strokeColor : '#fff'} strokeWidth="7" />
            </g>
          </svg> */}
        </div>
      )
    } else {
      return (
        <div className={styles.navMenu}>
          <div className={styles.left}>
            <div className={styles.bar} />
            <Slide cascade bottom big>
              <ul>
                {this.state.navlinks.map(({ linkText, url }, index) => (
                  <li key={index}><Link to={url} onMouseLeave={this.handleRemoveLinkImg} onMouseOver={() => this.handleLinkImg(index)}>{linkText}</Link></li>
                ))}
              </ul>
            </Slide>
          </div>
          <Slide right>
            <div className={styles.right}>
              <img src={closeIcon} alt="" onClick={this.handleMenu} />
              <div className={styles.linkImage} style={{ backgroundImage: `url(${linkImg1})` }} ref="linkImgBox" />
            </div>
          </Slide>

          <Link to="/" onClick={this.handleMenu}>
            <Fade>
              <img className={styles.logo} src={logo} alt="logo" />
            </Fade>
          </Link> 
        </div>
      )
    }
  }
}
